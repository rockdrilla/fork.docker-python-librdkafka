name: Build & Publish Docker images.

env:
  DOCKERHUB_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/python-librdkafka
  GHCR_IMAGE: ghcr.io/${{ github.repository_owner }}/python-librdkafka

on:
  push:
    tags:
      - "v*.*"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
    steps:
      - name: Get git tag.
        id: get_tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.7', '3.8', '3.9', '3.10' ]
    env:
      IMAGE_TAG: ${{ matrix.python-version }}-librdkafka-1.6.0-${{ needs.setup.outputs.tag }}
    steps:
      - name: Checkout.
        uses: actions/checkout@v2

      - name: Replace basic Docker image's python version.
        run: |
          sed -i 's/python:3-slim-bullseye/python:${{ matrix.python-version }}-slim-bullseye/' Dockerfile
          head Dockerfile

      - name: Set up Docker Buildx.
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers.
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and export artifact.
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: |
            ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: false
          tags: |
            ${{ env.DOCKERHUB_IMAGE }}:${{ env.IMAGE_TAG }}
            ${{ env.GHCR_IMAGE }}:${{ env.IMAGE_TAG }}
          outputs: |
            type=docker,dest=/tmp/img-${{ matrix.python-version }}.tar
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Upload artifact.
        uses: actions/upload-artifact@v2
        with:
          name: |
            image-${{ matrix.python-version }}
          path: |
            /tmp/img-${{ matrix.python-version }}.tar

  publish:
    needs: [setup, build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.7', '3.8', '3.9', '3.10' ]
    env:
      IMAGE_TAG: ${{ matrix.python-version }}-librdkafka-1.6.0-${{ needs.setup.outputs.tag }}
    steps:
      - name: Download artifact.
        uses: actions/download-artifact@v2
        with:
          name: |
            image-${{ matrix.python-version }}
          path: /tmp

      - name: Load image.
        run: |
          docker load --input /tmp/img-${{ matrix.python-version }}.tar

      - name: Login to DockerHub.
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry.
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push.
        run: |
          docker push ${{ env.DOCKERHUB_IMAGE }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.GHCR_IMAGE }}:${{ env.IMAGE_TAG }}

      - name: Push (:latest).
        if: ${{ matrix.python-version == '3.10' }}
        uses: akhilerm/tag-push-action@v2.0.0
        with:
          src: ${{ env.DOCKERHUB_IMAGE }}:${{ env.IMAGE_TAG }}
          dst: |
            ${{ env.DOCKERHUB_IMAGE }}:latest
            ${{ env.GHCR_IMAGE }}:latest
